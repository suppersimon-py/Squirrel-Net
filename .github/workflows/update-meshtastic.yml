name: Build SquirrelCore Firmware

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git python3 python3-pip
        python3 -m pip install --user platformio gh jq

    - name: Fetch latest stable Meshtastic release
      id: meshtastic
      run: |
        # Ensure gh CLI is logged in
        gh auth status || gh auth login --with-token <<< "$GH_TOKEN"

        # Get latest non-dev, non-revoked release
        RELEASE=$(gh release list --repo meshtastic/firmware --limit 20 --json tagName,name \
          | jq -r '.[] | select(.tagName | test("dev") | not) | select(.name | test("\\(Revoked\\)") | not) | .tagName' | head -n1)

        if [ -z "$RELEASE" ]; then
          echo "Error: Could not determine latest Meshtastic release!"
          exit 1
        fi

        echo "Latest Meshtastic release: $RELEASE"
        echo "meshtastic_version=$RELEASE" >> $GITHUB_OUTPUT

        # Download source if available, ignore failure
        gh release download "$RELEASE" --repo meshtastic/firmware \
          --pattern 'source.tar.gz' --output meshtastic.tar.gz || true

        # Extract if downloaded
        if [ -f meshtastic.tar.gz ]; then
          mkdir -p meshtastic
          tar -xzf meshtastic.tar.gz -C meshtastic --strip-components=1
          rm meshtastic.tar.gz
        else
          # Fallback: clone repo at release tag
          git clone --branch $RELEASE --depth 1 https://github.com/meshtastic/firmware.git meshtastic
        fi

    - name: Build SquirrelCore firmware
      run: |
        if [ -d meshtastic/variants/SquirrelCore ]; then
          echo "Building SquirrelCore variant..."
          cd meshtastic
          platformio run -e SquirrelCore || exit 1
        else
          echo "No SquirrelCore variant present. Skipping build."
          exit 0
        fi

    - name: Package firmware
      if: success()
      run: |
        mkdir -p firmware
        cp meshtastic/.pio/build/SquirrelCore/firmware.bin firmware/SquirrelCore-${{ steps.meshtastic.outputs.meshtastic_version }}.bin

    - name: Create GitHub release for SquirrelCore
      if: success()
      run: |
        RELEASE_TAG="SquirrelCore-${{ steps.meshtastic.outputs.meshtastic_version }}"
        gh release create "$RELEASE_TAG" firmware/* --title "$RELEASE_TAG" --notes "Auto-built SquirrelCore firmware for Meshtastic ${{ steps.meshtastic.outputs.meshtastic_version }}"
